{
  "title": "ECMAScript 8 新特性",
  "createAt": "2019-04-17T10:07:10.000Z",
  "updateAt": "2019-04-17T10:07:11.000Z",
  "tags": "前端",
  "author": "lian",
  "bodyContent": "# \bECMAScript 8\n\n1、添加 String.padStart 和 String.padEnd\n功能：填充字符串，以达到指定长度。\n\n- 当指定长度小于等于原字符串长度时，返回原字符串\n- 当指定长度大于原字符串长度时，用指定字符串填充，若是未指定字符串，则用空字符填充。\n  示例\n\n```js\n// 前置填充\n\"es8\".padStart(5) => \"  es8\"\n\n\"es8\".padStart(5,\"lian\") => \"lies8\"\n// 后置填充\n\"es8\".padEnd(5) => \"es8  \"\n\n\"es8\".padEnd(5,\"lian\") => \"es8li\"\n```\n\n2、添加 Object.values 和 Object.entries\n功能：返回指定对象的枚举属性值（属性，值）的数组\n示例：\n\n```js\nconst obj = {x:1,y:2}\nObject.values(obj) => [1,2]\n\nObject.entries(obj) => [[x,1],[y,2]]\n```\n\n3、添加 Object.getOwnPropertyDescriptors\n功能：返回指定对象的所有属性描述符\n示例：\n\n```js\nconst obj = {\n  get age(){\n    return 10;\n  }\n}\nObject.getOwnPropertyDescriptors(obj) =>\n{age:{configurable:true,enumerable:true,get:function age(){},set:undefined}}\n```\n\n4、增强字符串模版\n示例：\n\n```js\nconst version = 8;\nfunction helper(strs,...keys){\n  const addit = keys[0]===8? \"better\":\"good\";\n  return `${strs[0]} ${keys[0]} ${strs[1]} ${addit}`\n}\n\nhelper `ES ${version} is` => ES8 is better\n```\n\n(待续)",
  "bodyHtml": "<h1>\bECMAScript 8</h1>\n<p>1、添加 String.padStart 和 String.padEnd\n功能：填充字符串，以达到指定长度。</p>\n<ul>\n<li>当指定长度小于等于原字符串长度时，返回原字符串</li>\n<li>当指定长度大于原字符串长度时，用指定字符串填充，若是未指定字符串，则用空字符填充。\n示例</li>\n</ul>\n<pre><code class=\"hljs\"><span class=\"hljs-comment\">// 前置填充</span>\n<span class=\"hljs-string\">\"es8\"</span>.padStart(<span class=\"hljs-number\">5</span>) =&gt; <span class=\"hljs-string\">\"  es8\"</span>\n\n<span class=\"hljs-string\">\"es8\"</span>.padStart(<span class=\"hljs-number\">5</span>,<span class=\"hljs-string\">\"lian\"</span>) =&gt; <span class=\"hljs-string\">\"lies8\"</span>\n<span class=\"hljs-comment\">// 后置填充</span>\n<span class=\"hljs-string\">\"es8\"</span>.padEnd(<span class=\"hljs-number\">5</span>) =&gt; <span class=\"hljs-string\">\"es8  \"</span>\n\n<span class=\"hljs-string\">\"es8\"</span>.padEnd(<span class=\"hljs-number\">5</span>,<span class=\"hljs-string\">\"lian\"</span>) =&gt; <span class=\"hljs-string\">\"es8li\"</span></code></pre><p>2、添加 Object.values 和 Object.entries\n功能：返回指定对象的枚举属性值（属性，值）的数组\n示例：</p>\n<pre><code class=\"hljs\"><span class=\"hljs-keyword\">const</span> obj = {<span class=\"hljs-attr\">x</span>:<span class=\"hljs-number\">1</span>,<span class=\"hljs-attr\">y</span>:<span class=\"hljs-number\">2</span>}\n<span class=\"hljs-built_in\">Object</span>.values(obj) =&gt; [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>]\n\n<span class=\"hljs-built_in\">Object</span>.entries(obj) =&gt; [[x,<span class=\"hljs-number\">1</span>],[y,<span class=\"hljs-number\">2</span>]]</code></pre><p>3、添加 Object.getOwnPropertyDescriptors\n功能：返回指定对象的所有属性描述符\n示例：</p>\n<pre><code class=\"hljs\"><span class=\"hljs-keyword\">const</span> obj = {\n  <span class=\"hljs-keyword\">get</span> age(){\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">10</span>;\n  }\n}\n<span class=\"hljs-built_in\">Object</span>.getOwnPropertyDescriptors(obj) =&gt;\n{<span class=\"hljs-attr\">age</span>:{<span class=\"hljs-attr\">configurable</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-attr\">enumerable</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-attr\">get</span>:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">age</span>(<span class=\"hljs-params\"></span>)</span>{},<span class=\"hljs-attr\">set</span>:<span class=\"hljs-literal\">undefined</span>}}</code></pre><p>4、增强字符串模版\n示例：</p>\n<pre><code class=\"hljs\"><span class=\"hljs-keyword\">const</span> version = <span class=\"hljs-number\">8</span>;\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">helper</span>(<span class=\"hljs-params\">strs,...keys</span>)</span>{\n  <span class=\"hljs-keyword\">const</span> addit = keys[<span class=\"hljs-number\">0</span>]===<span class=\"hljs-number\">8</span>? <span class=\"hljs-string\">\"better\"</span>:<span class=\"hljs-string\">\"good\"</span>;\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`<span class=\"hljs-subst\">${strs[<span class=\"hljs-number\">0</span>]}</span> <span class=\"hljs-subst\">${keys[<span class=\"hljs-number\">0</span>]}</span> <span class=\"hljs-subst\">${strs[<span class=\"hljs-number\">1</span>]}</span> <span class=\"hljs-subst\">${addit}</span>`</span>\n}\n\nhelper <span class=\"hljs-string\">`ES <span class=\"hljs-subst\">${version}</span> is`</span> =&gt; ES8 is better</code></pre><p>(待续)</p>\n",
  "preview": "\bECMAScript 8\n\n1、添加 String.padStart 和",
  "dir": "src/public/generate/tech/lian",
  "base": "es8.json",
  "ext": ".json",
  "sourceBase": "es8.md",
  "sourceExt": ".md"
}